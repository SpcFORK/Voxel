import io;
import threads;

var currentTurn = 0;
var nextMyTurn = 0;

function repeat(value, times) {
    var myTurn = &(nextMyTurn++);

    for (var i = 0; i < times; i++) {
        while (currentTurn != myTurn) {}

        io.println(value);

        currentTurn = (currentTurn + 1) % 3;
    }

    var ownId = threads.getOwnThread().id;

    io.println("My thread ID: " + ownId);

    return ownId * 3;
}

var thread1 = new threads.Thread(repeat, ["Thread 1", 5]);
var thread2 = new threads.Thread(repeat, ["Thread 2", 5]);

thread1.start();
thread2.start();

repeat("Main executor", 5);

thread1.waitUntilFinished();

io.println("Thread 1 return value:", thread1.getReturnValue());

thread1.close();
io.println("Closed thread 1");

io.println("Thread 2 return value:", thread2.join());

io.println("Closed thread 2");

io.println("Main executor ID:", threads.getOwnThread().id);